@Library('jenkins-libs') _
pipeline {
  agent any
 parameters {
    //server values
        string(name: 'ambiente', defaultValue: '', description: 'prod o preprod')
        string(name: 'portHost', defaultValue: '5023', description: 'port en host')
    }
    environment {
        // container values
        name_container = 'api-core'
        pathYamlFile = '/home/jenkinsuser/docker-compose.yaml'
        pathLogHost = '/home/jenkinsuser/tree/logs/'
        pathAppsettingHost = '/home/jenkinsuser/tree/settings/appsettings.json:/app/appsettings.json'
        division = 'host129b'
        portApp = '5023'
        pathLogApp = '/app/Logs/'
        network = 'central'
    }
  
    stages {
        stage('Directory Tree') {
            steps {
                script {
                    def parameterMap = [:]
                    parameterMap["division"] = division
                    parameterMap["pathLogApp"] = params.pathLogHost
                    parameterMap["pathAppsetting"] = params.pathAppsettingHost
                    env.directoryTree = dockerBuild.directoryTree(parameterMap);
                    echo "${directoryTree}"
                }
            }
        }

        stage('yaml') {
            when {
                expression {
                    return env.equalsVersion.toBoolean();
                }
            }
            steps {
                
                script{
                    
                    def parameterMap = [:]
                    parameterMap["containerName"] = params.containerName
                    parameterMap["containerPort"] = params.containerPort
                    parameterMap["containerPortApp"] = params.containerPortApp
                    parameterMap["pathLogHost"] = params.pathLogHost
                    parameterMap["pathAppsetting"] = params.pathAppsetting
                    parameterMap["pathLogApp"] = params.pathLogApp
                    parameterMap["network"] = params.network
                    parameterMap["remoteHost"] = params.remoteHost
                    parameterMap["pathYaml"] = params.pathYaml
                    dockerb.dockerEditYaml(parameterMap)
                    }
                    
                }  
            
        }
    }

}